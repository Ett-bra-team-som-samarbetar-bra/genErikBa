@page "/test"
@inject NavigationManager Navigation
@inject HttpClient HttpClient

<PageTitle>Test</PageTitle>

@if (eventDetails == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="event-details" style="background-image: url('@Helper.GetBackgroundImageUrl(eventDetails.ImagePath)');
                                background-size: cover; 
                                background-position: center; 
                                height: 500px;
                                width: 500px;">

        <h1>@eventDetails.Name</h1>
        <p>@eventDetails.Description</p>
    </div>
}

@code {
    private Event? eventDetails { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var events = await HttpClient.GetFromJsonAsync<List<Event>>($"api/event/get");
            eventDetails = events?.LastOrDefault()!;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching events: {ex.Message}");
        }
    }
}
